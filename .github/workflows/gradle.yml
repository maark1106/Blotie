name: Build and Deploy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run chmod to make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Set environment variables
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: cicdsample
          path: build/libs/*.jar

      - name: Deploy application to EC2
        run: |
          scp -i /path/to/your/private-key.pem build/libs/*.jar ec2-user@your-ec2-ip:/home/ec2-user/
          ssh -i /path/to/your/private-key.pem ec2-user@your-ec2-ip << 'EOF'
            sudo systemctl stop myapp.service || true
            sudo cp /home/ec2-user/*.jar /usr/local/bin/
            sudo systemctl start myapp.service
          EOF

      - name: Run application on remote server with dev profile
        run: |
          ssh -i /path/to/your/private-key.pem ec2-user@your-ec2-ip << 'EOF'
            export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
            java -jar /usr/local/bin/your-application.jar --spring.profiles.active=dev
          EOF

